#mysql连接
server.port=8080
helloWorld = Hello SpringBoot!
spring.h2.console.enabled=true
spring.datasource.url=jdbc:mysql://localhost:3306/stock?serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Redis本地服务器地址，注意要开启redis服务，即那个redis-server.exe
spring.redis.host=127.0.0.1
#Redis服务器端口,默认为6379.若有改动按改动后的来
spring.redis.port=6379
#Redis服务器连接密码，默认为空，若有设置按设置的来
spring.redis.password=123456
#连接池最大连接数，若为负责则表示没有任何限制
spring.redis.jedis.pool.max-active=8
#连接池最大阻塞等待时间，若为负责则表示没有任何限制
spring.redis.jedis.pool.max-wait=-1
#连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8


#线程池配置
stock.thread.core-size=20
stock.thread.max-size=200
stock.thread.keep-alive-time=10


## mq是否开启自动配置
#rocketmq.producer.isOnOff=on
## 发送同一类消息设置为同一个group，保证唯一默认不需要设置，rocketmq会使用ip@pid（pid代表jvm名字）作为唯一标识
#rocketmq.producer.groupName=${spring.application.name}
## mq的nameserver地址
#rocketmq.producer.namesrvAddr=127.0.0.1:9876
## 消息最大长度 默认 1024 * 4 (4M)
#rocketmq.producer.maxMessageSize = 4096
## 发送消息超时时间，默认 3000
#rocketmq.producer.sendMsgTimeOut=3000
## 发送消息失败重试次数，默认2
#rocketmq.producer.retryTimesWhenSendFailed=2


spring.rabbitmq.host=120.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/
# 开启发送端消息抵达Broker确认
#spring.rabbitmq.publisher-confirms=true
# 开启发送端消息抵达Queue确认
spring.rabbitmq.publisher-returns=true
# 只要消息抵达Queue，就会异步发送优先回调returnfirm
spring.rabbitmq.template.mandatory=true
# 手动ack消息，不使用默认的消费端确认
spring.rabbitmq.listener.simple.acknowledge-mode=manual
